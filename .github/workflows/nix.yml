name: "nix"

on:
  workflow_dispatch: # allows manual triggering
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Nix Flakes doesn't work on shallow clones
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "nix flake check"
      run: nix flake check -Lvv
  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Nix Flakes doesn't work on shallow clones
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "cargo clippy"
      run: nix develop --command cargo clippy

  actionlint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "actionlint"
      run: nix develop .#actionlintShell --command actionlint --ignore SC2002

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "cargo deny"
      run: nix develop .#lintShell --command cargo deny check licenses sources

  cargo-udeps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "cargo udeps"
      run: nix develop .#lintShell --command cargo udeps

  treefmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "treefmt"
      run: nix develop .#fmtShell --command treefmt --fail-on-change

  documenation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "build documentation"
      run: |
        nix develop
        cargo doc --all-features --document-private-items

  dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "build dependencies"
      run: nix build -Lvv .#cargoArtifacts

  dependencies-msrv:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "build dependencies msrv"
      run: nix build -Lvv .#cargoArtifactsMSRV

  build-examples:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "build examples"
      run: |
        nix build -Lvv .#simple_ls
        nix build -Lvv .#simple_ls_rw
        nix build -Lvv .#smux
        nix build -Lvv .#nested_shell
        nix build -Lvv .#nested_shell_async
        nix build -Lvv .#long_running

  cargo-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "cargo test"
      run: |
        echo "This runs cargo-nextest"
        nix build -Lvv .#cargoNextest

  cargo-doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v11
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "cargo doc"
      run: nix build -Lvv .#cargoDoc
